name: Publish & Release
on:
  push:
    branches:
      - main

permissions:
  contents: write
  id-token: write
  pull-requests: write

env:
  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

jobs:
  npm-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: pnpm
          registry-url: 'https://registry.npmjs.org'
          always-auth: true

      - run: pnpm install --frozen-lockfile
      - run: pnpm lint
      - run: pnpm tc
      - run: pnpm test
      - run: pnpm run prepublishOnly

      - uses: changesets/action@v1
        name: Publish and Release
        with:
          publish: pnpm run release
          commit: 'chore(release): version packages'
          title: 'chore(release): version packages'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          HUSKY: 0 # skips all Husky hooks for this commit
  jsr-publish:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Set up Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x
          cache: true

      - name: Publish to JSR
        run: deno publish
